name: Build and Release Glitch

on:
  push:
    tags:
      - 'v*.*' # contoh: v1.0, v2.5

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install MinGW
      run: |
        # Unduh MinGW secara langsung (lebih cepat dan stabil)
        $url = "https://github.com/brechtsanders/winlibs_mingw/releases/download/13.2.0-16.0.6-11.0.1-msvcrt-r5/winlibs-x86_64-posix-seh-gcc-13.2.0-llvm-16.0.6-mingw-w64msvcrt-11.0.1-r5.zip"
        Invoke-WebRequest -Uri $url -OutFile mingw.zip
        Expand-Archive -Path mingw.zip -DestinationPath mingw
        
        # Tambahkan ke PATH
        $mingwPath = Resolve-Path "mingw/mingw64/bin"
        echo "$mingwPath" | Out-File -FilePath $env:GITHUB_PATH -Append

    - name: Build glitch.exe
      run: |
        g++ -O2 -static -o glitch.exe glitch.cpp -lgdi32

    - name: Verify build
      run: |
        if (Test-Path glitch.exe) {
            echo "Build successful!"
            echo "File size: $((Get-Item glitch.exe).Length) bytes"
        } else {
            echo "Build failed!"
            Get-ChildItem
            exit 1
        }

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        name: Glitch Effect ${{ github.ref_name }}
        body: |
          Desktop glitch effect application
          - Press ESC to exit
          - Built automatically from GitHub Actions
        files: glitch.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
